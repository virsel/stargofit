# Generated by Django 2.2 on 2019-07-04 14:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CoolDown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.CharField(blank=True, max_length=40, null=True)),
                ('equipment_de', models.CharField(blank=True, max_length=40, null=True)),
                ('equipment_en', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('kind', models.CharField(choices=[('endurance_training', 'Ausdauer Training'), ('muscle_building', 'Muskelaufbau'), ('strength_training', 'Krafttraining'), ('flexibility_training', 'Dehnübungen'), ('aeorobic', 'Aeorobic')], default='muscle_building', max_length=200)),
                ('sub_kind', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('endurance_training', 'Ausdauer Training'), ('muscle_building', 'Muskelaufbau'), ('strength_training', 'Krafttraining'), ('flexibility_training', 'Dehnübungen'), ('aeorobic', 'Aeorobic')], default=None, max_length=80, null=True)),
                ('title', models.CharField(max_length=200)),
                ('title_de', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('efficiency', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('difficulty', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('like_percentage', models.IntegerField(default=0, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('equipment', models.ManyToManyField(blank=True, default=None, related_name='exercises', to='training_plans.Equipment')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SubAreas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubMuscles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('muscle', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tipps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipp', models.TextField(blank=True, max_length=70, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('day', models.DateField()),
                ('cool_down', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='training_cool_down', to='training_plans.CoolDown')),
            ],
        ),
        migrations.CreateModel(
            name='eMuscleBuilding',
            fields=[
                ('area', models.CharField(blank=True, choices=[('arms', 'Arme'), ('core', 'Oberkörper'), ('legs', 'Beine'), ('back', 'Rücken'), ('glutes', 'Po')], default=1, max_length=40)),
                ('muscle', models.CharField(blank=True, choices=[('vordere_schulter', 'vordere Schulter'), ('hintere_schulter', 'hintere Schulter'), ('seitliche_schulter', 'seitliche Schulter'), ('bizeps', 'Bizeps'), ('unterarme', 'Unterarme'), ('trizeps', 'Trizeps'), ('obere_brust', 'obere Brust'), ('mittlere_brust', 'mittlere Brust'), ('untere_brust', 'untere Brust'), ('seitlicher_bauch', 'seitlicher Bauch'), ('mittlere_bauch', 'mittlerer Bauch'), ('adduktoren', 'Adduktoren'), ('oberschenkel', 'Oberschenkel'), ('schienbein', 'Schienbein'), ('beinbizeps', 'Beinbizeps'), ('wade', 'Wade'), ('nacken', 'Nacken'), ('untergrätenmuskel', 'Untergrätenmuskel'), ('kapuzenmuskel', 'Kapuzenmuskel'), ('rautenmuskel', 'Rautenmuskel'), ('rundmuskel', 'Rundmuskel'), ('latissimus', 'Latissimus'), ('unterer_rücken', 'unterer Rücken'), ('po', 'Po')], default='bizeps', max_length=60)),
                ('exercise_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='muscle_building', serialize=False, to='training_plans.Exercise')),
                ('sub_muscles', models.ManyToManyField(blank=True, default=None, related_name='exercises', to='training_plans.SubMuscles')),
            ],
            bases=('training_plans.exercise',),
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('exercises', models.ManyToManyField(blank=True, related_name='workouts', to='training_plans.Exercise')),
            ],
        ),
        migrations.CreateModel(
            name='WarmUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('exercises', models.ManyToManyField(blank=True, to='training_plans.Exercise')),
            ],
        ),
        migrations.CreateModel(
            name='Training_plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('endurance_training', 'Endurance training'), ('muscle_building', 'Muscle building'), ('strength_training', 'Strength training'), ('flexibility_training', 'Flexibility training'), ('aeorobic', 'Aeorobic')], max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('overview', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_plans_created', to=settings.AUTH_USER_MODEL)),
                ('trainings', models.ManyToManyField(blank=True, related_name='training_plans', to='training_plans.Training')),
                ('users', models.ManyToManyField(blank=True, related_name='training_plans_joined', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='training',
            name='warm_up',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='training_warm_up', to='training_plans.WarmUp'),
        ),
        migrations.AddField(
            model_name='training',
            name='workout',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='training', to='training_plans.Workout'),
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.TextField(blank=True)),
                ('exercise', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='instruction', to='training_plans.Exercise')),
            ],
        ),
        migrations.AddField(
            model_name='exercise',
            name='tipps',
            field=models.ManyToManyField(blank=True, default=None, related_name='tipps', to='training_plans.Tipps'),
        ),
        migrations.AddField(
            model_name='cooldown',
            name='exercises',
            field=models.ManyToManyField(blank=True, to='training_plans.Exercise'),
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(blank=True, decimal_places=1, max_digits=4)),
                ('reversrements', models.SmallIntegerField(blank=True)),
                ('exercise', models.ManyToManyField(blank=True, default=None, related_name='sets', to='training_plans.eMuscleBuilding')),
            ],
        ),
        migrations.CreateModel(
            name='eEnduranceTraining',
            fields=[
                ('area', models.CharField(blank=True, choices=[('arms', 'Arme'), ('core', 'Oberkörper'), ('legs', 'Beine'), ('back', 'Rücken'), ('glutes', 'Po'), ('bauch', 'Bauch')], default=1, max_length=40)),
                ('exercise_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='endurance_training', serialize=False, to='training_plans.Exercise')),
                ('sub_areas', models.ManyToManyField(blank=True, default=None, related_name='exercises', to='training_plans.SubAreas')),
            ],
            bases=('training_plans.exercise',),
        ),
    ]
